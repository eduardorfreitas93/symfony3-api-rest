imports:
  - { resource: handlers.yml }
  - { resource: queries.yml }

services:
    app.exception_listener:
        class: AppBundle\EventListener\ExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    acme_api.event.authentication_success_listener:
        class: AppBundle\EventListener\AuthenticationSuccessListener
        tags:
          - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    app.abstract.service:
        class: AppBundle\Services\AbstractService
        abstract: true
        calls:
          - method: setEntityManager
            arguments:
              - "@doctrine.orm.entity_manager"
          - method: setPasswordEncoder
            arguments:
              - "@security.password_encoder"
          - method: setSerializer
            arguments:
              - "@serializer"
          - method: setJwtAuthentication
            arguments:
              - "@lexik_jwt_authentication.encoder"
          - method: setContainer
            arguments:
              - "@service_container"
          - method: setEventDispatcher
            arguments:
              - "@event_dispatcher"

    app.helper.service:
        class: AppBundle\Services\Helper
        public: true
        parent: app.abstract.service

    app.friend.service:
        class: AppBundle\Services\FriendService
        public: true
        parent: app.abstract.service

    app.file.service:
        class: AppBundle\Services\FileService
        public: true
        parent: app.abstract.service

    app.token.firebase.service:
        class: AppBundle\Services\TokenFirebase
        public: true
        parent: app.abstract.service

#calls:
#    - method: setUserManager
#      arguments:
#        - "@fos_user.user_manager"
#    - method: setEnderecoService
#      arguments:
#        - "@app.endereco.service"
#    - method: setTermoService
#      arguments:
#        - "@app.termo.service"
#    - method: setRouter
#      arguments:
#        - "@router"
#    - method: setEmailService
#      arguments:
#        - "@app.email.service"